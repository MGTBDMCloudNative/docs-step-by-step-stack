env: ($ environment $)
project: ($ project $)
customer: ($ organization_canonical $)

git_repository: git@github.com:my/repo_to_validate.git

# git status
git_repository_name: my/repo_to_validate
git_access_token: ((github_access_token.data))
git_key: ((git.ssh_key))
git_branch: ($ environment $)

molecule_env_vars:
  ANSIBLE_PIP_VERSION: 2.4.6
  SSH_AGENT_KEY: ((git.ssh_key))
  ANSIBLE_PATH: ansible

terraform_env_vars:
  TF_VAR_access_key: ((aws_step-by-step.access_key))
  TF_VAR_secret_key: ((aws_step-by-step.secret_key))
  # ACTION_ARGS could be plan or validate
  ACTION_ARGS: plan

pipeline_env_vars:
  USERNAME: user@mail.com
  PASSWORD: ((raw_user_password))
  PIPELINE_TEMPLATE: pipeline.yml
  PIPELINE_VARIABLES: variables.yml
  ORGANIZATION: ($ organization_canonical $)
  PIPELINE_NAME: ($ project $)-($ environment $)-validate

#. config_terraform_path (required): .ci/terraform
#+ Path of Terraform files in the config git repository
config_terraform_path: .ci/terraform
stack_terraform_path: terraform

#. config_pipeline_path (required): .ci/pipeline
#+ Path of pipeline variables files in the config git repository
config_pipeline_path: .ci/pipeline
stack_pipeline_path: pipeline
